#Использовать logos

Перем мНастройки;
Перем Лог;
Перем КешИнтернетПрокси;

Функция ПолучитьНастройки() Экспорт
	Если мНастройки.СервераПакетов.Количество() = 0 Тогда
		ИнициализацияСерверовПакетов();
	КонецЕсли;
	Возврат мНастройки;
КонецФункции

Процедура УстановитьНастройкиПроксиСервера(Знач Сервер,
											Знач Порт = 0,
											Знач Пользователь = "",
											Знач Пароль = "",
											Знач ИспользоватьАутентификациюОС = Ложь) Экспорт
	
	НастройкиПрокси = Новый Структура();
	
	НастройкиПрокси.Вставить("Сервер", Сервер);
	НастройкиПрокси.Вставить("Порт", Порт);
	НастройкиПрокси.Вставить("Пользователь",Пользователь);
	НастройкиПрокси.Вставить("Пароль", Пароль);
	НастройкиПрокси.Вставить("ИспользоватьАутентификациюОС", ИспользоватьАутентификациюОС);
	
	мНастройки.НастройкиПрокси = НастройкиПрокси;

	мНастройки.ИспользоватьПрокси = ЗначениеЗаполнено(Сервер);
	мНастройки.ИспользоватьСистемныйПрокси = Ложь;

КонецПроцедуры

Функция ПолучитьИнтернетПрокси() Экспорт
	
	Если КешИнтернетПрокси = Неопределено 
		И мНастройки.ИспользоватьПрокси Тогда
		
		Если мНастройки.ИспользоватьСистемныйПрокси Тогда
			
			КешИнтернетПрокси = Новый ИнтернетПрокси(Истина);
			КешИнтернетПрокси.НеИспользоватьПроксиДляЛокальныхАдресов = Истина;

		Иначе
			
			НастройкиПрокси = мНастройки.НастройкиПрокси;
			
			КешИнтернетПрокси = Новый ИнтернетПрокси();
			
			КешИнтернетПрокси.Установить("http", НастройкиПрокси.Сервер, НастройкиПрокси.Порт,
										НастройкиПрокси.Пользователь, НастройкиПрокси.Пароль,
										НастройкиПрокси.ИспользоватьАутентификациюОС);

			КешИнтернетПрокси.Установить("https", НастройкиПрокси.Сервер, НастройкиПрокси.Порт,
										НастройкиПрокси.Пользователь, НастройкиПрокси.Пароль,
										НастройкиПрокси.ИспользоватьАутентификациюОС);
			
			КешИнтернетПрокси.НеИспользоватьПроксиДляЛокальныхАдресов = Истина;
	
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат КешИнтернетПрокси;

КонецФункции

Процедура УстановитьИспользованиеПрокси(Знач ЗначениеНастройки) Экспорт
	
	мНастройки.ИспользоватьПрокси = ЗначениеНастройки;
	
КонецПроцедуры

Процедура УстановитьСозданиеShСкриптЗапуска(Знач ЗначениеНастройки) Экспорт
	
	мНастройки.СоздаватьShСкриптЗапуска = ЗначениеНастройки;

КонецПроцедуры

Процедура УстановитьСистемныеНастройкиПроксиСервера(Знач ЗначениеНастройки) Экспорт
	
	мНастройки.ИспользоватьПрокси = ЗначениеНастройки;
	мНастройки.ИспользоватьСистемныйПрокси = ЗначениеНастройки;

КонецПроцедуры

Процедура ДобавитьСерверПакетов(Знач СерверПакетов) Экспорт
	мНастройки.СервераПакетов.Добавить(СерверПакетов);
КонецПроцедуры


Процедура СброситьНастройки() Экспорт
	
	Инициализация();

КонецПроцедуры

Процедура ИнициализацияСерверовПакетов()
	// Сервера пакетов по умолчанию
	ДобавитьСерверПакетов(СерверыПакетов.ОсновнойСервер());
	ДобавитьСерверПакетов(СерверыПакетов.ЗапаснойСервер());
КонецПроцедуры

Процедура Инициализация()

	мНастройки = Новый Структура();
	мНастройки.Вставить("ИспользоватьПрокси", Ложь);
	мНастройки.Вставить("ИспользоватьСистемныйПрокси", Ложь);

	мНастройки.Вставить("НастройкиПрокси", Новый Структура("Сервер, Порт, Пользователь, Пароль, ИспользоватьАутентификациюОС", "","","","", Ложь));
	мНастройки.Вставить("СоздаватьShСкриптЗапуска", Ложь);
	мНастройки.Вставить("СервераПакетов", Новый Массив);
	
КонецПроцедуры

Лог = Логирование.ПолучитьЛог("oscript.app.opm");

Инициализация();
